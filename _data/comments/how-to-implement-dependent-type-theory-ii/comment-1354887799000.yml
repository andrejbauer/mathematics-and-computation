name: Maxime Dénès
date: '2012-12-07 14:43:19'
url: 'http://www-sop.inria.fr/members/Maxime.Denes/'
message: "Normalization by Evaluation is indeed an elegant approach, which is in fact also used in Coq: it is behind the \"Eval vm_compute in ...\" command. This reduction based on bytecode compilation implemented by Benjamin Grégoire [1] is also an instance of untyped NbE. More recently, this machinery has been adapted to the stock OCaml compiler, so that it can be used to compile Coq's conversion test to native code [2]. A prototype branch is available at: https://github.com/maximedenes/native-coq\r\n\r\nJust to mention one key difference with what is described above, in order to avoid breaking compiler optimizations, an App node in an expression is interpreted by an OCaml application (without an explicit App tag). Same is true for pattern matching when you have it in your dependently-typed language.\r\n\r\n[1] Benjamin Grégoire and Xavier Leroy. A compiled implementation of strong reduction. In International Conference on Functional Programming 2002, pages 235-246. ACM Press, 2002.\r\n[2] Full reduction at full throttle. Mathieu Boespflug, Maxime Dénès and Benjamin Grégoire in First International Conference on Certified Programs and Proofs, Tawain, December 7-9, Lecture Notes in Computer Science. Springer, 2011."
email: cdce49bdb71ecde7fcc72a075c8125cc
