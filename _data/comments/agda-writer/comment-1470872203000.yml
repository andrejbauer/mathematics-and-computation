name: KernelJ
date: '2016-08-11 01:36:43'
url: ''
message: "It is worth mentioning that Coq has had CoqIde for a long time, so if (like me) you are a Vim user and vehemently opposed to using Emacs, then it is a great option to have.\r\n\r\nI have defined these simple bindings defined in CoqIde's GTK config file, which provides the vast majority of the UTF8 you'd actually want to use for basic logic, numeric inequalities and writing out types.  (N.B. the logical negation character &#172; comes on UK keyboard as standard.)\r\n\r\n  bind \"F9\"  {\"insert-at-cursor\" (\"&#8594;\")}\r\n  bind \"F11\" {\"insert-at-cursor\" (\"&#8704;\")}\r\n  bind \"F12\" {\"insert-at-cursor\" (\"&#8707;\")}\r\n  bind \"&lt;shift&gt;F9\"  {\"insert-at-cursor\" (\"&#955;\")}\r\n  bind \"&lt;shift&gt;F11\" {\"insert-at-cursor\" (\"&#8744;\")}\r\n  bind \"&lt;shift&gt;F12\" {\"insert-at-cursor\" (\"&#8743;\")}\r\n  bind \"&lt;ctrl&gt;F9\"  {\"insert-at-cursor\" (\"&#8800;\")}\r\n  bind \"&lt;ctrl&gt;F11\" {\"insert-at-cursor\" (\"&#8804;\")}\r\n  bind \"&lt;ctrl&gt;F12\" {\"insert-at-cursor\" (\"&#8805;\")}\r\n  bind \"&lt;ctrl&gt;&lt;shift&gt;F9\" {\"insert-at-cursor\" (\"&#8596;\")}\r\n\r\n(In case you can't read that, the listed symbols are: implication [right arrow], universal quantifier [for all / upside down A], existential quantifier [there exists, backwards E], lambda [greek letter], vel [logical OR / like a V], wedge [logical AND / upside down V], not equals [equals with stroke through], less than or equal, more than or equal, bi-implication [two-way arrow].)\r\n\r\nThese are much better shortcuts than writing out LaTeX names, and allow you to type out proofs a lot more naturally and faster.  If you want a more exotic/uncommon symbol you can just copy and paste it in, which is actually very easy in a normal editor.  Or you could go and create your own keyboard layout to switch in and out of for greeks and so on, or use an on-screen character map tool.  With a custom IDE you might prefer a toolbar you can just click on for various symbols.\r\n\r\nRegardless, it is quite clear that the lack of editors has nothing to do with the popularity of proof assistants.  It has a lot more to do with writing proof checked programs being incredibly difficult, tedious and slow work, compared to just writing code contracts and unit testing etc.  However, with awful 'Agile' code development methodologies already being widespread, there isn't even any time for test-driven development or up-front design work any more, never mind producing certificates of correctness.  You must simply 'write the code', every day, for your weekly 'sprint'.  It is very depressing.  Maybe if you're a superstar/oracle of knowledge, you can do all your proofs in half a day, and convince your manager it's worthwhile, despite it making all your code unmaintainable for any less skilled person, since the proofs will stop working and they won't be able to fix it, and by implication, there won't be any normal unit tests to check it still behaves properly otherwise.  For anyone else it's hopeless.\r\n\r\nAnyway, I too would like to see this editor ported or just rewritten as cross-platform for Windows &amp; Linux, because as it is, on OSX only, it may as well not exist for most people, including a lot of those that might wish to improve/maintain it, who aren't likely to want overpriced Apple products (except for cross platform testing, or to work on iOS stuff)."
email: 66649a447d25bf907303adadf5a93cf2
