name: Matt Oliveri
date: '2016-08-19 01:03:22'
url: ''
message: "&gt; Coming back to the original question, “What is a formal proof?”: Such practical consideration are irrelevant for this question. The proof IS the full derivation, in my view.\r\n\r\nFull derivations, as defined for formal metatheory, certainly have their place. But the topic of Mike and Andrej's blog posts is the requirements for proof representations used in actual, implemented proof tools.\r\n\r\n&gt; there is apparently a spectrum of choices, offering a trade-off between storage space and processing time.\r\n\r\n&gt; I guess the gzip compression that is used in the flyspeck project is probably quite appropriate at this stage of development, as opposed to some cleverer problem-specific shortcuts in the file format.\r\n\r\nI was wrong. It's not actually raw I/O that I expect to slow down a derivation checker. It's lexing, parsing, and well-formedness checking of the derivation format. I was sort of equating this with I/O overhead, since you have it when the data comes from outside the trusted kernel, but it's not really I/O.\r\n\r\nThe point of check-time scripts is not to save disk space, and it's not really to reduce raw I/O throughput either. It's to reduce the amount of input that needs to be checked. Gzip and other general-purpose compression techniques don't help with this because the uncompressed form still needs to get checked.\r\n\r\nSo don't take the compression analogy too literally. Compression is actually pretty orthogonal to proof performance.\r\n\r\nI still think check-time scripts would be faster, but it doesn't really matter all that much. People will do something fast enough to stay sane, and we should be worrying more about usability improvements than performance improvements."
email: 66cbd251bde282eb2e1584080e3604ea
