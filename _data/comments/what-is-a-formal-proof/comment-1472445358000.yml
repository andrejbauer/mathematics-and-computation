name: Matt Oliveri
date: '2016-08-29 06:35:58'
url: ''
message: "&gt; Now the question is: How much does Coqine do? I was under the assumption that Coqine reads the .vo file into memory (using the code from Coq) and then simply translates the proof steps into Dedukti format.\n\n&gt; Here is a passage from Section 4... Note in particular that “the translation is linear”. This supports my assumption.\n\nOK.\n\n&gt; The other option (which I did not think about) is that the .vo file is really (some internal form of) a proof script.\n\nI'm pretty sure tactics are gone in .vo's, if that's what you're thinking.\n\n&gt; Maybe someone can figure out the length of the Coq.Lists.List source script.\n\nIn the coq-8.5pl2 tarball, List.v is 62,044 bytes. That's probably not quite the version the paper was using.\n\n&gt; Andrej what do you mean with storing the conclusion? Only the statements of the theorems (plus definitions etc.) without proofs?\n\nI cannot directly answer your question to Andrej, but keep in mind that, with the context implicit, type theory has judgments of the form \"<i>term</i> : <i>type</i>\". These judgments are the conclusions of derivations. However, when proving a proposition in type theory, the technique is to represent the proposition as a <i>type</i>, and find some proof <i>term</i> for it. In the case of Coq's type theory, the resulting (<i>term</i> : <i>type</i>) judgment is typically feasible to check without any additional information. So the conclusions of judgments are often quite sufficient as (proposition,proof) pairs. This also means they tend to be fairly large, due to the proof terms.\n\n&gt; Furthermore, how should we trust a system that reads in conclusions and proceeds from there without checking them?\n\nWe should not. For Coq, (<i>term</i> : <i>type</i>) judgments can and should be checked, using a type checker."
email: 66cbd251bde282eb2e1584080e3604ea
