name: Radu Grigore
date: '2009-04-12 00:16:32'
url: 'http://rgrig.blogspot.com/'
message: "Let's say I agree that programmers are stupid: Then perhaps we should educate them instead of giving them blunt tools that can't hurt them.\r\n\r\nNow to change the subject. As any <i>good</i> Java programmer will tell you, representing the empty tree by null is the <i>best</i> solution. The only disadvantage you gave, that NullPointerException <i>will</i> happen, is simply not a pragmatic reason. For <i>if</i> it happens, it will happen <i>quickly</i> and will make you <i>think harder</i> about the code. The two sub-classes solution sucks for the reason you mentioned: It makes the code hard to read, because it's spread out. The boolean solution is by far the worst: Just as in the null-solution you are responsible to check for empty trees with no help from the compiler, when you get an exception it doesn't directly translate to \"you forgot the empty tree case\", and you occupy extra memory. (Yes, using extra memory is bad, especially when you don't gain <i>anything</i>.) There is absolutely no excuse for using this solution, let alone teach it.\r\n\r\nMost people find it easier to think about a stateful world and some find it easier to think about a stateless world. Of course, at some deep level both formalisms are equivalent. It's sad to see time and again people from one camp claiming that the others are ignorants, instead of acknowledging that different people have different styles of thinking."
email: fd91265e84931489c6ced077ea828506
