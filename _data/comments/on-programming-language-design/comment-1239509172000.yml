name: chris
date: '2009-04-12 06:06:12'
url: ''
message: "I'm not sure if this was covered in the comments to the closure post, but here's the main issue: \r\n\r\nSuppose you have a bunch of inline code that you want to turn into a zero-arg closure.  Suppose that code modifies some variable i.  If the closure takes the value of i at definition time and turns it into a local variable, the code works differently when you create the closure than when you inline it.\r\n\r\nThis adds an extra layer of confusion since macros and closures would behave differently.  You can't apply the logic of a pure functional language to an imperative stateful one.  The example above is a reasonably common one, that comes up if you realize you have the same bit of code in both branches of an if."
email: a0e6045e4e8a7a31cd4183257c9ae6ac
