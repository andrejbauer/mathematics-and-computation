name: Matija Pretnar
date: '2010-09-28 08:32:53'
url: 'http://matija.pretnar.info'
message: "An excellent question. I had no idea, so I tested it. I made some slight alterations to your code:\n[sourcecode collapse=\"true\"]\ndef append msg log:\n    match log:\n        case &quot;&quot;: msg\n        case _: msg ^ &quot;, &quot; ^ log\n\neffect logger:\n    operation print msg:\n        (log, result) = yield ()\n        (append msg log, result)\n    return x: (&quot;&quot;, x)\n\neffect treeChoice:\n    operation choose (a, b):\n        l = yield a\n        r = yield b\n        Node l r\n    return x: Leaf x\n\neffect choiceLogger:\n    operation print msg:\n        (log, result) = yield ()\n        (append msg log, result)\n    operation choose (a,b):\n        l = yield a\n        r = yield b\n        (&quot;&quot;, Node l r)\n    return x: (&quot;&quot;, Leaf x)\n[/sourcecode]\n\nIt turns out that you can get both result types you proposed, plus a third one, all depending on the order in which you instantiate the effects.\n\nIf you first instantiate the logger, it will be shared between all the branches:\n[sourcecode gutter=\"false\" highlight=\"8,9\"]\n&gt;&gt;&gt; with logger...\n... with treeChoice...\n... x = choose (0, 1)\n... print (&quot;x=&quot; ^ to_string x)\n... y = choose (2, 4)\n... print (&quot;y=&quot; ^ to_string y)\n... x + y\n(&quot;x=0, y=2, y=4, x=1, y=2, y=4&quot;,\nNode (Node (Leaf 2) (Leaf 4)) (Node (Leaf 3) (Leaf 5)))\n[/sourcecode]\n\nIf you first instantiate the choices, each one will have its own logger:\n[sourcecode gutter=\"false\" highlight=\"8,9\"]\n&gt;&gt;&gt; with treeChoice...\n... with logger...\n... x = choose (0, 1)\n... print (&quot;x=&quot; ^ to_string x)\n... y = choose (2, 4)\n... print (&quot;y=&quot; ^ to_string y)\n... x + y\nNode (Node (Leaf (&quot;x=0, y=2&quot;, 2)) (Leaf (&quot;x=0, y=4&quot;, 4)))\n     (Node (Leaf (&quot;x=1, y=2&quot;, 3)) (Leaf (&quot;x=1, y=4&quot;, 5)))\n[/sourcecode]\n\nIn the combined effect you proposed, the logger gets reset at each node:\n[sourcecode gutter=\"false\" highlight=\"7,8\"]\n&gt;&gt;&gt; with choiceLogger...\n... x = choose (0, 1)\n... print (&quot;x=&quot; ^ to_string x)\n... y = choose (2, 4)\n... print (&quot;y=&quot; ^ to_string y)\n... x + y\n(&quot;&quot;, Node (&quot;x=0&quot;, Node (&quot;y=2&quot;, Leaf 2) (&quot;y=4&quot;, Leaf 4))\n          (&quot;x=1&quot;, Node (&quot;y=2&quot;, Leaf 3) (&quot;y=4&quot;, Leaf 5)))\n[/sourcecode]"
email: 81edd40c675051c393c53f72b7c1428a
