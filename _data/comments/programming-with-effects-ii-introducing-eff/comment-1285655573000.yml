name: Matija Pretnar
date: '2010-09-28 08:32:53'
url: 'http://matija.pretnar.info'
message: "An excellent question. I had no idea, so I tested it. I made some slight alterations to your code:\r\n[sourcecode collapse=\"true\"]\r\ndef append msg log:\r\n    match log:\r\n        case &quot;&quot;: msg\r\n        case _: msg ^ &quot;, &quot; ^ log\r\n\r\neffect logger:\r\n    operation print msg:\r\n        (log, result) = yield ()\r\n        (append msg log, result)\r\n    return x: (&quot;&quot;, x)\r\n\r\neffect treeChoice:\r\n    operation choose (a, b):\r\n        l = yield a\r\n        r = yield b\r\n        Node l r\r\n    return x: Leaf x\r\n\r\neffect choiceLogger:\r\n    operation print msg:\r\n        (log, result) = yield ()\r\n        (append msg log, result)\r\n    operation choose (a,b):\r\n        l = yield a\r\n        r = yield b\r\n        (&quot;&quot;, Node l r)\r\n    return x: (&quot;&quot;, Leaf x)\r\n[/sourcecode]\r\n\r\nIt turns out that you can get both result types you proposed, plus a third one, all depending on the order in which you instantiate the effects.\r\n\r\nIf you first instantiate the logger, it will be shared between all the branches:\r\n[sourcecode gutter=\"false\" highlight=\"8,9\"]\r\n&gt;&gt;&gt; with logger...\r\n... with treeChoice...\r\n... x = choose (0, 1)\r\n... print (&quot;x=&quot; ^ to_string x)\r\n... y = choose (2, 4)\r\n... print (&quot;y=&quot; ^ to_string y)\r\n... x + y\r\n(&quot;x=0, y=2, y=4, x=1, y=2, y=4&quot;,\r\nNode (Node (Leaf 2) (Leaf 4)) (Node (Leaf 3) (Leaf 5)))\r\n[/sourcecode]\r\n\r\nIf you first instantiate the choices, each one will have its own logger:\r\n[sourcecode gutter=\"false\" highlight=\"8,9\"]\r\n&gt;&gt;&gt; with treeChoice...\r\n... with logger...\r\n... x = choose (0, 1)\r\n... print (&quot;x=&quot; ^ to_string x)\r\n... y = choose (2, 4)\r\n... print (&quot;y=&quot; ^ to_string y)\r\n... x + y\r\nNode (Node (Leaf (&quot;x=0, y=2&quot;, 2)) (Leaf (&quot;x=0, y=4&quot;, 4)))\r\n     (Node (Leaf (&quot;x=1, y=2&quot;, 3)) (Leaf (&quot;x=1, y=4&quot;, 5)))\r\n[/sourcecode]\r\n\r\nIn the combined effect you proposed, the logger gets reset at each node:\r\n[sourcecode gutter=\"false\" highlight=\"7,8\"]\r\n&gt;&gt;&gt; with choiceLogger...\r\n... x = choose (0, 1)\r\n... print (&quot;x=&quot; ^ to_string x)\r\n... y = choose (2, 4)\r\n... print (&quot;y=&quot; ^ to_string y)\r\n... x + y\r\n(&quot;&quot;, Node (&quot;x=0&quot;, Node (&quot;y=2&quot;, Leaf 2) (&quot;y=4&quot;, Leaf 4))\r\n          (&quot;x=1&quot;, Node (&quot;y=2&quot;, Leaf 3) (&quot;y=4&quot;, Leaf 5)))\r\n[/sourcecode]"
email: 81edd40c675051c393c53f72b7c1428a
