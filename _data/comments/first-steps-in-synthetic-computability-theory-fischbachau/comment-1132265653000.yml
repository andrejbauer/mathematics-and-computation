name: Andrej Bauer
date: '2005-11-17 23:14:13'
url: 'http://andrej.com/'
message: "Dear logicnazi (nice username): I have been told by recursion theorists that (1) it is not so cumbersome to work with Goedel encodings once one gets used to it, and (2) as you yourself claim, most of the time one desn't have to use Goedel encodings anyway, once they have been mastered. But this begs the question: what <em>do</em> you use? I understand that there may be an informal way of doing \"high-level\" recursion theory, but I am interested in a precise axiomatization. I would appreciate a reference if you have one.\n\nWhat I am attempting is a precise \"synthetic\" formulation of computability, one that looks like ordinary set theory and topology. It may lack an audience, and it may be next to impossible to learn it without first learning classical recursion theory. It is hard to tell without performing a nasty experiment on a young mathematician.\n\nIntuitionistically the powerset `Omega = P(1)` of the singleton set is far from being \"just `{0,1}`\". Think of it this way. We have three different sets `2 subset Sigma subset Omega` which all look the same to a classical mathemtican. To get some feel for them, it is informative to look at functions with codomains `2`, `Sigma`, and `Omega`. The function space `2^N` are the recursive sets, `Sigma^N` are the r.e. sets, `Omega^N` are all subsets of `N`. In fact, beween `Sigma` and `Omega` we can find further subsets `Sigma_n` and `Pi_n` such that functions `N -&gt; Sigma_n` and `N -&gt; Pi_n` are the characteristic functions of sets in the arithmetical hierarchy. So `Omega` is a strange \"two element\" set which contains a whole lot of structure. The whole thing is a bit confusing at first. Perhaps you can look at my post <a href=\"http://math.andrej.com/2005/05/16/how-many-is-two/\" rel=\"nofollow\">\"How many is two\"?</a> for a start.\n"
email: 59d57d95bc7c45ced5f1969279cec06b
