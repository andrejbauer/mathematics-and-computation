name: Dan Doel
date: '2010-10-01 00:05:40'
url: ''
message: "<blockquote>Regarding resetting anywhere, is this what is supposed to happen</blockquote>\n\nYes. The shadowing seems to work there. However,\n\n<blockquote>And yes, a continuation can definitely have its own control effects in eff.</blockquote>\n\nIn that case, I think we need more information to decide whether this actually implements shift/reset, or some other set of operators. For instance:\n<code>\nwith reset: shift (lambda k: k 5 + 1) + shift (lambda l: 0)\n</code>\n\nFor shift/reset semantics, that should be 1. For control/prompt, it's 0. Further, I wonder how the shadowing above works. What answer does:\n<code>\nwith reset: shift (lambda k: (with reset: k 5) + 1) + shift (lambda l: 0)\n</code>\n\ngive? With a single prompt shift/reset, control/prompt, etc. the answer is 1. If the prompts are distinct, though, a control/prompt-alike will give 0, instead of 1, because, after a bit of munging, we get (I think this is accurate):\n<code>\nwith reset as p: (with reset as q: 5 + p.shift (lambda l: 0)) + 1\n</code>\n\nSo the shift (control) captures both the (5 +) and the (+ 1), and discards them. Inner resets might actually correspond to a handler (An inner <code>reset p M</code> would correspond to <code>handle M with operation p.shift: ...</code>), but that's just a guess.\n\nThere's also, of course, another axis you can vary delimited operators along: whether the shift/control as a block is re-delimited. Operators where it isn't are called (in the only place I've seen them, at least) shift0 and control0. So (going back to something more Haskell like):\n<code>\nreset (64 + reset (0 + shift0 (\\k -&gt; shift0 (\\_ -&gt; k 0)))) = 0\nreset (64 + reset (reset (0 + shift0 (\\k -&gt; shift0 (\\_ -&gt; k 0))))) = 64\n</code>\n\nand similarly:\n<code>\nreset (64 + reset (control0 (\\k -&gt; k 5) + control0 (\\_ -&gt; 0))) = 0\nreset (64 + reset (reset (control0 (\\k -&gt; k 5) + control0 (\\_ -&gt; 0)))) = 64\n</code>\n\nbut I don't expect that's how the eff works."
email: af6ee853a79ce70a9ce68ae1e1fc852c
