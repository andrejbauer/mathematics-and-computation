name: Paul Taylor
date: '2012-12-26 12:12:51'
url: 'http://www.paultaylor.eu'
message: "My guess is that people feel the need to bind variables in the way that you describe because they have an instinct for logical syntax without the training, and $\\forall$ (and $\\int$) are the only binding operators that they know.  If the variables are not bound then they are loose, just as the threads in a piece of cloth that is not bound with a hem are loose and will become frayed.\r\n\r\nA careful analysis of syntax uses an expression tree, which is like a piece of cloth in that it has threads.  But when weaving cloth it is more useful to keep the <a href=\"http://en.wikipedia.org/wiki/Warp_%28weaving%29\" rel=\"nofollow\">warp</a> <b>on</b> the loom so that it can be extended. Likewise, we keep hold of the free variables in an expression tree rather than binding them so that we can extend the expression by substituting for (and into) them.\r\n\r\nSo the answers to your first two questions are no, but\r\n$$ x:X \\quad \\vdash\\quad x+\\sin x $$\r\nis a function of (expression in) $x$, whilst\r\n$$ x:X,\\ y:Y \\quad \\vdash\\quad x+\\sin x $$\r\nis an expression in $x$ and $y$.\r\n\r\nThese may be seen as examples of <b>morphisms</b> $X\\to R$ and $X\\times Y\\to R$ in the <a href=\"http://math.andrej.com/2012/09/28/substitution-is-pullback/comment-page-1/#comment-21993\" rel=\"nofollow\"><b>category of contexts and substitutions</b></a>.\r\n\r\nI'm afraid that Dan is wrong in saying that Type Theory gets this straight, because for them $X\\to R$ is another type and not a hom or a sequent. This is like confusing the first expression above with\r\n$$ \\lambda x.X+\\sin x. $$\r\nThis is the same confusion as the one between $\\phi(x)$ and $\\forall x.\\phi(x)$ about which Andrej has written, but it is still present in what he has written.\r\n\r\nSo, passing from arithmetic to logical examples, there is a <i>three</i>-way confusion amongst\r\n$$ \\Gamma,\\ x:X \\quad\\vdash\\quad \\phi x, $$\r\n$$ \\Gamma \\quad\\vdash\\quad \\lambda x.\\phi x $$\r\nand\r\n$$ \\Gamma \\quad\\vdash\\quad \\forall x.\\phi x, $$\r\nby each of which I mean that the formula on the right is asserted to be well formed rather than true.\r\n\r\nDoes this matter? What does $\\lambda$-abstraction actually do?\r\n\r\nIf you only have one (\"arithmetical\") type, such as $R$, so $R\\to R$ can only mean a hom and is not a type in itself, then $\\lambda x.f(x)$ is either ill-formed or just means $x:X\\vdash f(x)$.  This is like working in a category with products but not exponentials, or a logic with conjuction and no implication.\r\n\r\nIt is only when we introduce these higher types that there is a distinction.\r\n\r\nFor the terms, if the only thing you can do with $\\lambda x.f(x)$ is apply it then this is the same as substituting into $x:X\\vdash f(x)$.  Only when this function is <b>reified</b> (made into a thing in itself) as the value of some higher-type function is there any difference.\r\n\r\nReturning to the examples from \"school calculus\", when does the distinction between an expression and its $\\lambda$-abstraction become significant?  I was going to say, only when we study the Calculus of Variations, but it does come in earlier, with the calculation of the volume of a figure of revolution, given the function that provides its profile.\r\n\r\nRecently, in the work of someone who definitely does understand these syntactic distinctions, I saw the commutative law written as\r\n$$ \\forall x, y. x \\star y = y \\star x.  $$\r\nNow, I consider that this is wrong and that it should be written instead as\r\n$$ x,\\ y :X \\quad\\vdash\\quad x\\star y = y\\star x. $$\r\nHowever, as I have explained, the reasons for my opinion are quite subtle."
email: 24674efd7c9de6dad323b394fbdf2ebd
