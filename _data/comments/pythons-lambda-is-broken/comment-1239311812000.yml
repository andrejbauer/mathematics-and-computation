name: Andrej Bauer
date: '2009-04-09 23:16:52'
url: 'http://andrej.com/'
message: "First a reply to ludwig: yes, thank you, that's what I get for changing the source without rechecking if it still works. I fixed it.\n\nA reply to goodger: this is not a popularity contest. My motivation is not to get a maximum number of replies. I prefer fewer well though out replies than a lot of fly-by comments. If registration is too much burden for you, then don't register. Anyhow, thank you for your comment.\n\nI thank everyone else for their explanations. I still wonder how I should explain this to my students (beginners, some of them have not seen any other programming language in their lives).\n\nAfter seeing some of your posts, I discovered a much bigger horror in Python:\n<blockquote><pre>>>> i\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'i' is not defined\n>>> [i for i in range(10)]\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n>>> i\n9</module></stdin></pre></blockquote>\nOh my, <code>i</code> is still defined after the list comprehension. This is certainly unexpected. Same thing for loops:\n<blockquote><pre>>>> j\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'j' is not defined\n>>> for j in range(10): pass\n... \n>>> j\n9</module></stdin></pre></blockquote>\nWhile I could accept the explanation about how closures capture the location and not the value, this really is a design error. The loop variable ough to be local to the loop. But I suppose I get what I deserve for using a dynamic language."
email: 59d57d95bc7c45ced5f1969279cec06b
